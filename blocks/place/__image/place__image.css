/*.place__image {
  position: absolute;

Я хотел сделать отзывчивый макет, который будет не только в ключевых точках соответстововать,
но и на промежуточных ширинах viewport принимать какое-то промежуточное значение.
Таким образом, я использовал Grid для блока place, и мне, в общем случае,
неизвестна ширина ячейки с картинкой, так как ширина рассчитывается Grid автоматически,
исходя из установленных пропорций. Поэтому я задаю ширину картинки свойством width: 100%,
чтобы картинка растянулась на всю ширину ячейки Grid при любом ее возможном промежуточном состоянии.
Теперь мне надо, чтобы высота была равна ширине, но я не могу прописать что-то типа:
height: 100%-от-ШИРИНЫ-родителя. (Странно, неужели так трудно было реализовать такую возможность в CSS?!) - (явно нет, раз padding умеет это!)
Единственный способ, который я отыскал, чтобы задать высоту относительно ширины,
это костыли с использованием вертикального padding-а, например padding-bottom: 100%.
Но самому тегу <img> я не могу задать паддинг, поскольку он умеет рисовать картинку только внутри области content,
а свойства object-clip, аналогичного свойству background-clip: padding-box, нет.
Т.е. если я назначу padding-bottom тегу <img>, он добавится снизу к картинке.
Чтобы картинка нарисовалась поверх паддинга, нужно вставлять ее фоном.
Но так как фоном нельзя, потому что картинка содержательная, отстается только наложить ее абсолютом
на квадрат (который, будучи родителем картинки, определит ее размеры).
Другого способа я просто не вижу.
Если задавать ширину картинки в пикселях (а ширину колонки auto), то, если мы хотим резиновость,
надо будет опять городить формулы, интерполирующие эту ширину между ключевыми точками,
что сводит на нет преимущество Grid.

Если отказаться от резинового макета, то, конечно, проблема решается легко.
(Или отказаться от использования не-квадратных фотографий и просто вставлять их как есть с width: 100%)
В данном проекте, понятно, от нас резиновость не требуется - и можно так и поступить.
Но как быть в случае, если нужен полностью отзывчивый макет? Ведь такие случаи будут.
Какое решение именно в таких случаях будет правильным?

P.S. Проблема актуальна не только для квадратных изображений, но и для любого соотношения сторон.
Например, если мне нужно поместить в контейнер блок с определенным соотношением сторон, но точная
ширина мне неизвестна, так как блок должен растягиваться по ширине контейнера, которая будет изменяться.
И что тогда делать? Использовать padding-bottom? - А если это текстовый блок? Есть ли какое-то решение?

  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}*/


/*
Здесь я не стал полностью отказываться от интерполяции формулами ширины изображений,
но пришлось отказаться от плавности ее изменения после перехода на одну колонку.
*/

.place__image {
  width: var(--image-width);
  height: var(--image-width);
  object-fit: cover;
}


@media (max-width: 1280px) {

  .place {
    --image-width: calc(440px + (460 - 440) * var(--scale-L));
  }

}


@media (max-width: 1024px) {

  .place {
    --image-width: calc(340px + (440 - 340) * var(--scale-M));
  }

}


@media (max-width: 768px) {

  .place {
    --image-width: calc(100px + (340 - 100) * var(--scale-S));
  }

}


@media (max-width: 500px) {

  .place__image {
    --image-width: calc(320px - 2 * 16px);
    padding-left: var(--padding-S);
  }

}


@media (max-width: 320px) {

  .place__image {
    --image-width: 320px;
    padding-left: 0;
  }

}
